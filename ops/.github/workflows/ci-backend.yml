name: CI Backend
on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'ops/.github/workflows/ci-backend.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'ops/.github/workflows/ci-backend.yml'

jobs:
  lint-test-build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: alarms
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        working-directory: backend
        run: |
          python -m pip install -U pip
          pip install -e .
          pip install ruff pytest

      - name: Lint (ruff)
        working-directory: backend
        run: ruff check .

      - name: Unit tests (pytest)
        working-directory: backend
        env:
          DATABASE_URL: postgresql+psycopg://postgres:postgres@localhost:5432/alarms
          ENVIRONMENT: ci
          CORS_ORIGINS: http://localhost:3000
        run: pytest -q

      - name: Build API image
        run: docker build -t alarms-api:ci backend
